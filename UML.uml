@startuml

package app {
    class App {
        - scene : Scene
        - primaryStage : Stage
        + start(Stage) : void
        + showStartPage() : void
        + showLoginPage() : void
        + showAdminMainPage() : void
        + showServicePage() : void
        + showMedicineControlPage() : void
        + showPharmacyWorkersPage() : void
        + showOrdersPage() : void
        + main(String[]) : void
    }

    class StartPage {
        - root : BorderPane
        + StartPage()
        + getRoot() : BorderPane
    }

    class AdminPage {
        - loginRoot : BorderPane
        - mainRoot : BorderPane
        + AdminPage()
        + getLoginRoot() : BorderPane
        + getMainRoot() : BorderPane
    }

    class ServicePage {
        - root : BorderPane
        + ServicePage()
        + getRoot() : BorderPane
    }

    class MedicineControlPage {
        - root : BorderPane
        - medicineController : MedicineController
        + MedicineControlPage()
        + getRoot() : BorderPane
        + addMedicine(Medicine) : void
        + updateMedicine(Medicine) : void
        + deleteMedicine(int) : void
        + viewMedicine(int) : void
    }

    class PharmacyWorkersPage {
        - root : BorderPane
        + PharmacyWorkersPage()
        + getRoot() : BorderPane
    }

    class OrdersPage {
        - root : BorderPane
        + OrdersPage()
        + getRoot() : BorderPane
    }

    class AppUtils {
        + createLogo(width : double, alignment : String) : ImageView
    }
}

package controller {
    class MedicineController {
        - medicineDAO : MedicineDAO
        + MedicineController(medicineDAO : MedicineDAO)
        + addMedicine(medicine : Medicine) : boolean
        + updateMedicine(medicine : Medicine) : boolean
        + deleteMedicine(medicineId : int) : boolean
        + getMedicine(medicineId : int) : Medicine
        + listAllMedicines() : List<Medicine>
    }
}

package dao {
    class MedicineDAO {
        - medicines : List<Medicine>
        - nextId : int
        + MedicineDAO()
        + addMedicine(medicine : Medicine) : boolean
        + updateMedicine(medicine : Medicine) : boolean
        + deleteMedicine(medicineId : int) : boolean
        + getMedicine(medicineId : int) : Medicine
        + listAllMedicines() : List<Medicine>
    }
}

package model {
    class Medicine {
        - id : int
        - name : String
        - price : double
        - expirationDate : Date
        - stockQuantity : int
        + Medicine()
        + Medicine(id : int, name : String, price : double, expirationDate : Date, stockQuantity : int)
        + getId() : int
        + setId(id : int) : void
        + getName() : String
        + setName(name : String) : void
        + getPrice() : double
        + setPrice(price : double) : void
        + getExpirationDate() : Date
        + setExpirationDate(expirationDate : Date) : void
        + getStockQuantity() : int
        + setStockQuantity(stockQuantity : int) : void
        + getDetails() : String
        + isExpired() : boolean
    }
}

' Relationships
App --> StartPage
App --> AdminPage
App --> ServicePage
App --> MedicineControlPage
App --> PharmacyWorkersPage
App --> OrdersPage

StartPage ..> AppUtils
AdminPage ..> AppUtils
ServicePage ..> AppUtils
MedicineControlPage ..> AppUtils

MedicineControlPage --> controller.MedicineController
controller.MedicineController --> dao.MedicineDAO
controller.MedicineController --> model.Medicine
dao.MedicineDAO --> model.Medicine

@enduml